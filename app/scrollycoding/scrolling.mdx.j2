## !intro a notes app in FastAPI step by step

**Warning**:  
[the final code is available at this repo](https://github.com/ue22-p24/backend-fastapi-notes-steps)
(as well as all the steps in the successive commits)

so, our goal here is to show **why** we're doing things, and **in what order**  
**do not try** to apply these successive **changes yourself** in the code !  
This would be very time-consuming, you would find yourself spending all your time doing cut-and-paste,
and that's not the goal here :)


### step 00: the starter code

the starter code in step 00 is the basic FastAPI `hello world` app

```python main.py
!from ../main-00.py
```

that you start from the terminal with:

```bash
fastapi run --reload
```

By default this uses port 8000, so no need to specify it even on MacOS (where port 5000, the Flask default, is used by a system service)

{{AUTO}}

## !outro conclusion

### some illustrations

here's how the whole system could be split into three different services

![](front-notes.excalidraw.svg)

- `front.notes.io` serves only the frondend (i.e. HTML, CSS, JS)
- `api.notes.io` serves the API and outputs JSON data
- `db.notes.io` serves the database, and talks SQL; only the API service is supposed to access it

here's a small figure that outlines the pro of websockets over regular HTTP traffic

![](websocket.excalidraw.svg)
